language: generic
os:
- linux
- osx
env:
  matrix:
  - PYTHON="3.8"
  - PYTHON="3.7"
  - PYTHON="3.6"
  global:
    - secure: "N7EenUcspE/pyC1I+TVLowRIBKPylRC6Jlk/DP4u5GAqIkrLqeZPvTjrWBIMvCkZ2B2dPtUZ5IbbxRMTZCTOQxzlcOL4hbJyzsrRJsskya+Mg9oAFYrZJ6D77AZaQ8iwLgGsOBJsTCyBp9iTBiB3x3KZYUwaMPw3SScVrbNOgzk="
jobs:
  include:
  - stage: lint
    os: linux
    script:
    - pip install flake8
    - flake8 cruAKtemp tests
before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl -L https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
  else
    curl -L https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
  fi
- ./bin/micromamba shell init -s bash -p ~/micromamba
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    source $HOME/.bash_profile
  else
    source $HOME/.bashrc
  fi
- micromamba activate
- micromamba install python=$PYTHON pip --yes -c conda-forge
install:
- pip install -e .
script:
- micromamba install bmi-tester --yes -c conda-forge
- pip install -r requirements-testing.txt
- pytest --cov=cruAKtemp --cov-report=xml:$(pwd)/coverage.xml -vvv
- mmd find cruAKtemp:BmiCruAKtempMethod
- mmd query --all cruAKtemp:BmiCruAKtempMethod
- mkdir _stage && mmd stage $(mmd find cruAKtemp:BmiCruAKtempMethod) ./_stage && ls _stage
- bmi-test cruAKtemp:BmiCruAKtempMethod
after_success: coveralls
